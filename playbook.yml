---
- name: ec2 launcher
  hosts: localhost
  connection: local
  gather_facts: false
  
  tasks:
    - name: launch dev instance
      ec2_instance_info:
        filters:
          "tag:Name": boxfuse-dev
          instance-state-name: ['running']
      register: ec2

    - name: Add new instances to host group
      add_host: 
        hostname: "{{ item.public_ip_address }}" 
        groups: 
          - dev
      loop: "{{ ec2.instances }}"

- name: Configure dev instance
  hosts: dev
  connection: ssh
  remote_user: ubuntu
#  become: true
  gather_facts: true

  vars:
    proj_dir: /tmp/boxfuse

  tasks:
    - name: ensure python, git, docker.io installed
      apt:
        name: ['git', 'python3', 'docker.io']
        state: present
        update_cache: true

    - name: ensure pip installed
      apt: name=python-pip state=present
      
    - name: ensure docker-py installed
      pip: name=docker-py

    - name: ensure project dir is empty
      file:
        path: "{{ proj_dir }}"
        state: absent

    - name: Clone maven Dockerfile
      git:
        repo: https://github.com/AMMiller/docker-maven.git
        dest: "{{ proj_dir }}"

    - name: Build Docker image from Dockerfile
      docker_image:
        name: boxfuse_web
        path: "{{ proj_dir }}"
        state: build  

    # or simply pull it from repo
    #- name: Pull an image
    #  docker_image:
    #    name: repo/someimage       
    #    source: pull

    - name: Build Docker image from Dockerfile
      docker_image:
        name: boxfuse_maven_builder
        path: "{{ proj_dir }}"
        state: build 

    - name: Start container with healthstatus
      docker_container:
        name: maven_builder
        image: boxfuse_maven_builder
        volumes: 
          - "/var/run/docker.sock:/var/run/docker.sock"
        state: started
        


    #- name: Tag image
    #  docker_image:
    #    name: boxfuse_web:latest     # Equal to name in build task.
    #    repository: boxfuse_web:latest  # New tag there.
    #    pull: no
    #    state: present
    #  when: image_build.changed